{
  "groups": [
    {
      "name": "management.endpoint.gateway",
      "type": "org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint",
      "sourceType": "org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint"
    },
    {
      "name": "management.endpoint.gateway",
      "type": "org.springframework.cloud.gateway.actuate.GatewayLegacyControllerEndpoint",
      "sourceType": "org.springframework.cloud.gateway.actuate.GatewayLegacyControllerEndpoint"
    },
    {
      "name": "spring.cloud.gateway",
      "type": "org.springframework.cloud.gateway.config.GatewayProperties",
      "sourceType": "org.springframework.cloud.gateway.config.GatewayProperties"
    },
    {
      "name": "spring.cloud.gateway.discovery.locator",
      "type": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties"
    },
    {
      "name": "spring.cloud.gateway.filter.remove-hop-by-hop",
      "type": "org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter"
    },
    {
      "name": "spring.cloud.gateway.filter.request-rate-limiter",
      "type": "org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers",
      "type": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties"
    },
    {
      "name": "spring.cloud.gateway.globalcors",
      "type": "org.springframework.cloud.gateway.config.GlobalCorsProperties",
      "sourceType": "org.springframework.cloud.gateway.config.GlobalCorsProperties"
    },
    {
      "name": "spring.cloud.gateway.httpclient",
      "type": "org.springframework.cloud.gateway.config.HttpClientProperties",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties"
    },
    {
      "name": "spring.cloud.gateway.httpclient.pool",
      "type": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties",
      "sourceMethod": "getPool()"
    },
    {
      "name": "spring.cloud.gateway.httpclient.proxy",
      "type": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties",
      "sourceMethod": "getProxy()"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl",
      "type": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties",
      "sourceMethod": "getSsl()"
    },
    {
      "name": "spring.cloud.gateway.httpclient.websocket",
      "type": "org.springframework.cloud.gateway.config.HttpClientProperties$Websocket",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties",
      "sourceMethod": "getWebsocket()"
    },
    {
      "name": "spring.cloud.gateway.loadbalancer",
      "type": "org.springframework.cloud.gateway.config.LoadBalancerProperties",
      "sourceType": "org.springframework.cloud.gateway.config.LoadBalancerProperties"
    },
    {
      "name": "spring.cloud.gateway.metrics",
      "type": "org.springframework.cloud.gateway.config.GatewayMetricsProperties",
      "sourceType": "org.springframework.cloud.gateway.config.GatewayMetricsProperties"
    },
    {
      "name": "spring.cloud.gateway.redis-rate-limiter",
      "type": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter",
      "sourceType": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter"
    },
    {
      "name": "spring.cloud.gateway.set-status",
      "type": "org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory"
    },
    {
      "name": "spring.cloud.gateway.x-forwarded",
      "type": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter"
    }
  ],
  "properties": [
    {
      "name": "management.endpoint.gateway.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable the gateway endpoint.",
      "sourceType": "org.springframework.cloud.gateway.actuate.GatewayControllerEndpoint",
      "defaultValue": true
    },
    {
      "name": "management.endpoint.gateway.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable the gateway endpoint.",
      "sourceType": "org.springframework.cloud.gateway.actuate.GatewayLegacyControllerEndpoint",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.default-filters",
      "type": "java.util.List<org.springframework.cloud.gateway.filter.FilterDefinition>",
      "description": "List of filter definitions that are applied to every route.",
      "sourceType": "org.springframework.cloud.gateway.config.GatewayProperties"
    },
    {
      "name": "spring.cloud.gateway.discovery.locator.enabled",
      "type": "java.lang.Boolean",
      "description": "Flag that enables DiscoveryClient gateway integration.",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
      "defaultValue": false
    },
    {
      "name": "spring.cloud.gateway.discovery.locator.filters",
      "type": "java.util.List<org.springframework.cloud.gateway.filter.FilterDefinition>",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties"
    },
    {
      "name": "spring.cloud.gateway.discovery.locator.include-expression",
      "type": "java.lang.String",
      "description": "SpEL expression that will evaluate whether to include a service in gateway integration or not, defaults to: true.",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
      "defaultValue": "true"
    },
    {
      "name": "spring.cloud.gateway.discovery.locator.lower-case-service-id",
      "type": "java.lang.Boolean",
      "description": "Option to lower case serviceId in predicates and filters, defaults to false. Useful with eureka when it automatically uppercases serviceId. so MYSERIVCE, would match \/myservice\/**",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
      "defaultValue": false
    },
    {
      "name": "spring.cloud.gateway.discovery.locator.predicates",
      "type": "java.util.List<org.springframework.cloud.gateway.handler.predicate.PredicateDefinition>",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties"
    },
    {
      "name": "spring.cloud.gateway.discovery.locator.route-id-prefix",
      "type": "java.lang.String",
      "description": "The prefix for the routeId, defaults to discoveryClient.getClass().getSimpleName() + \"_\". Service Id will be appended to create the routeId.",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties"
    },
    {
      "name": "spring.cloud.gateway.discovery.locator.url-expression",
      "type": "java.lang.String",
      "description": "SpEL expression that create the uri for each route, defaults to: 'lb:\/\/'+serviceId.",
      "sourceType": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
      "defaultValue": "'lb:\/\/'+serviceId"
    },
    {
      "name": "spring.cloud.gateway.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables gateway functionality.",
      "defaultValue": "true"
    },
    {
      "name": "spring.cloud.gateway.fail-on-route-definition-error",
      "type": "java.lang.Boolean",
      "description": "Option to fail on route definition errors, defaults to true. Otherwise, a warning is logged.",
      "sourceType": "org.springframework.cloud.gateway.config.GatewayProperties",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.filter.remove-hop-by-hop.headers",
      "type": "java.util.Set<java.lang.String>",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter"
    },
    {
      "name": "spring.cloud.gateway.filter.remove-hop-by-hop.order",
      "type": "java.lang.Integer",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter"
    },
    {
      "name": "spring.cloud.gateway.filter.request-rate-limiter.deny-empty-key",
      "type": "java.lang.Boolean",
      "description": "Switch to deny requests if the Key Resolver returns an empty key, defaults to true.",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.filter.request-rate-limiter.empty-key-status-code",
      "type": "java.lang.String",
      "description": "HttpStatus to return when denyEmptyKey is true, defaults to FORBIDDEN.",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.content-security-policy",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.content-type-options",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "nosniff"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.disable",
      "type": "java.util.List<java.lang.String>",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.download-options",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "noopen"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.frame-options",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "DENY"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.permitted-cross-domain-policies",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "none"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.referrer-policy",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "no-referrer"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.strict-transport-security",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "max-age=631138519"
    },
    {
      "name": "spring.cloud.gateway.filter.secure-headers.xss-protection-header",
      "type": "java.lang.String",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
      "defaultValue": "1 ; mode=block"
    },
    {
      "name": "spring.cloud.gateway.forwarded.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the ForwardedHeadersFilter.",
      "defaultValue": "true"
    },
    {
      "name": "spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping",
      "type": "java.lang.Boolean",
      "description": "If global CORS config should be added to the URL handler.",
      "defaultValue": "false"
    },
    {
      "name": "spring.cloud.gateway.globalcors.cors-configurations",
      "type": "java.util.Map<java.lang.String,org.springframework.web.cors.CorsConfiguration>",
      "sourceType": "org.springframework.cloud.gateway.config.GlobalCorsProperties"
    },
    {
      "name": "spring.cloud.gateway.httpclient.connect-timeout",
      "type": "java.lang.Integer",
      "description": "The connect timeout in millis, the default is 45s.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties"
    },
    {
      "name": "spring.cloud.gateway.httpclient.max-header-size",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The max response header size.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties"
    },
    {
      "name": "spring.cloud.gateway.httpclient.max-initial-line-length",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The max initial line length.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties"
    },
    {
      "name": "spring.cloud.gateway.httpclient.pool.acquire-timeout",
      "type": "java.lang.Long",
      "description": "Only for type FIXED, the maximum time in millis to wait for aquiring.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool"
    },
    {
      "name": "spring.cloud.gateway.httpclient.pool.max-connections",
      "type": "java.lang.Integer",
      "description": "Only for type FIXED, the maximum number of connections before starting pending acquisition on existing ones.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool"
    },
    {
      "name": "spring.cloud.gateway.httpclient.pool.max-idle-time",
      "type": "java.time.Duration",
      "description": "Time in millis after which the channel will be closed. If NULL, there is no max idle time.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool"
    },
    {
      "name": "spring.cloud.gateway.httpclient.pool.max-life-time",
      "type": "java.time.Duration",
      "description": "Duration after which the channel will be closed. If NULL, there is no max life time.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool"
    },
    {
      "name": "spring.cloud.gateway.httpclient.pool.name",
      "type": "java.lang.String",
      "description": "The channel pool map name, defaults to proxy.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool",
      "defaultValue": "proxy"
    },
    {
      "name": "spring.cloud.gateway.httpclient.pool.type",
      "type": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool$PoolType",
      "description": "Type of pool for HttpClient to use, defaults to ELASTIC.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool"
    },
    {
      "name": "spring.cloud.gateway.httpclient.proxy.host",
      "type": "java.lang.String",
      "description": "Hostname for proxy configuration of Netty HttpClient.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy"
    },
    {
      "name": "spring.cloud.gateway.httpclient.proxy.non-proxy-hosts-pattern",
      "type": "java.lang.String",
      "description": "Regular expression (Java) for a configured list of hosts. that should be reached directly, bypassing the proxy",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy"
    },
    {
      "name": "spring.cloud.gateway.httpclient.proxy.password",
      "type": "java.lang.String",
      "description": "Password for proxy configuration of Netty HttpClient.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy"
    },
    {
      "name": "spring.cloud.gateway.httpclient.proxy.port",
      "type": "java.lang.Integer",
      "description": "Port for proxy configuration of Netty HttpClient.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy"
    },
    {
      "name": "spring.cloud.gateway.httpclient.proxy.username",
      "type": "java.lang.String",
      "description": "Username for proxy configuration of Netty HttpClient.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy"
    },
    {
      "name": "spring.cloud.gateway.httpclient.response-timeout",
      "type": "java.time.Duration",
      "description": "The response timeout.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.close-notify-flush-timeout",
      "type": "java.time.Duration",
      "description": "SSL close_notify flush timeout. Default to 3000 ms.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "defaultValue": "3000ms"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.close-notify-read-timeout",
      "type": "java.time.Duration",
      "description": "SSL close_notify read timeout. Default to 0 ms.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.default-configuration-type",
      "type": "reactor.netty.tcp.SslProvider$DefaultConfigurationType",
      "description": "The default ssl configuration type. Defaults to TCP.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.handshake-timeout",
      "type": "java.time.Duration",
      "description": "SSL handshake timeout. Default to 10000 ms",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "defaultValue": "10000ms"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.key-password",
      "type": "java.lang.String",
      "description": "Key password, default is same as keyStorePassword.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.key-store",
      "type": "java.lang.String",
      "description": "Keystore path for Netty HttpClient.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.key-store-password",
      "type": "java.lang.String",
      "description": "Keystore password.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.key-store-provider",
      "type": "java.lang.String",
      "description": "Keystore provider for Netty HttpClient, optional field.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.key-store-type",
      "type": "java.lang.String",
      "description": "Keystore type for Netty HttpClient, default is JKS.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "defaultValue": "JKS"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.trusted-x509-certificates",
      "type": "java.util.List<java.lang.String>",
      "description": "Trusted certificates for verifying the remote endpoint's certificate.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.use-insecure-trust-manager",
      "type": "java.lang.Boolean",
      "description": "Installs the netty InsecureTrustManagerFactory. This is insecure and not suitable for production.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "defaultValue": false
    },
    {
      "name": "spring.cloud.gateway.httpclient.websocket.max-frame-payload-length",
      "type": "java.lang.Integer",
      "description": "Max frame payload length.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Websocket"
    },
    {
      "name": "spring.cloud.gateway.httpclient.websocket.proxy-ping",
      "type": "java.lang.Boolean",
      "description": "Proxy ping frames to downstream services, defaults to true.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Websocket",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.httpclient.wiretap",
      "type": "java.lang.Boolean",
      "description": "Enables wiretap debugging for Netty HttpClient.",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties",
      "defaultValue": false
    },
    {
      "name": "spring.cloud.gateway.httpserver.wiretap",
      "type": "java.lang.Boolean",
      "description": "Enables wiretap debugging for Netty HttpServer.",
      "defaultValue": "false"
    },
    {
      "name": "spring.cloud.gateway.loadbalancer.use404",
      "type": "java.lang.Boolean",
      "sourceType": "org.springframework.cloud.gateway.config.LoadBalancerProperties",
      "defaultValue": false
    },
    {
      "name": "spring.cloud.gateway.metrics.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the collection of metrics data.",
      "defaultValue": "true"
    },
    {
      "name": "spring.cloud.gateway.metrics.tags",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Tags map that added to metrics.",
      "sourceType": "org.springframework.cloud.gateway.config.GatewayMetricsProperties"
    },
    {
      "name": "spring.cloud.gateway.redis-rate-limiter.burst-capacity-header",
      "type": "java.lang.String",
      "description": "The name of the header that returns the burst capacity configuration.",
      "sourceType": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter",
      "defaultValue": "X-RateLimit-Burst-Capacity"
    },
    {
      "name": "spring.cloud.gateway.redis-rate-limiter.config",
      "type": "java.util.Map<java.lang.String,org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter$Config>",
      "sourceType": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter"
    },
    {
      "name": "spring.cloud.gateway.redis-rate-limiter.include-headers",
      "type": "java.lang.Boolean",
      "description": "Whether or not to include headers containing rate limiter information, defaults to true.",
      "sourceType": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.redis-rate-limiter.remaining-header",
      "type": "java.lang.String",
      "description": "The name of the header that returns number of remaining requests during the current second.",
      "sourceType": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter",
      "defaultValue": "X-RateLimit-Remaining"
    },
    {
      "name": "spring.cloud.gateway.redis-rate-limiter.replenish-rate-header",
      "type": "java.lang.String",
      "description": "The name of the header that returns the replenish rate configuration.",
      "sourceType": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter",
      "defaultValue": "X-RateLimit-Replenish-Rate"
    },
    {
      "name": "spring.cloud.gateway.redis-rate-limiter.requested-tokens-header",
      "type": "java.lang.String",
      "description": "The name of the header that returns the requested tokens configuration.",
      "sourceType": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter",
      "defaultValue": "X-RateLimit-Requested-Tokens"
    },
    {
      "name": "spring.cloud.gateway.routes",
      "type": "java.util.List<org.springframework.cloud.gateway.route.RouteDefinition>",
      "description": "List of Routes.",
      "sourceType": "org.springframework.cloud.gateway.config.GatewayProperties"
    },
    {
      "name": "spring.cloud.gateway.set-status.original-status-header-name",
      "type": "java.lang.String",
      "description": "The name of the header which contains http code of the proxied request.",
      "sourceType": "org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory"
    },
    {
      "name": "spring.cloud.gateway.streaming-media-types",
      "type": "java.util.List<org.springframework.http.MediaType>",
      "sourceType": "org.springframework.cloud.gateway.config.GatewayProperties"
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.enabled",
      "type": "java.lang.Boolean",
      "description": "If the XForwardedHeadersFilter is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.for-append",
      "type": "java.lang.Boolean",
      "description": "If appending X-Forwarded-For as a list is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.for-enabled",
      "type": "java.lang.Boolean",
      "description": "If X-Forwarded-For is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.host-append",
      "type": "java.lang.Boolean",
      "description": "If appending X-Forwarded-Host as a list is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.host-enabled",
      "type": "java.lang.Boolean",
      "description": "If X-Forwarded-Host is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.order",
      "type": "java.lang.Integer",
      "description": "The order of the XForwardedHeadersFilter.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": 0
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.port-append",
      "type": "java.lang.Boolean",
      "description": "If appending X-Forwarded-Port as a list is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.port-enabled",
      "type": "java.lang.Boolean",
      "description": "If X-Forwarded-Port is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.prefix-append",
      "type": "java.lang.Boolean",
      "description": "If appending X-Forwarded-Prefix as a list is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.prefix-enabled",
      "type": "java.lang.Boolean",
      "description": "If X-Forwarded-Prefix is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.proto-append",
      "type": "java.lang.Boolean",
      "description": "If appending X-Forwarded-Proto as a list is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.x-forwarded.proto-enabled",
      "type": "java.lang.Boolean",
      "description": "If X-Forwarded-Proto is enabled.",
      "sourceType": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
      "defaultValue": true
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.close-notify-flush-timeout-millis",
      "type": "java.lang.Long",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "deprecated": true,
      "deprecation": {
        "replacement": "spring.cloud.gateway.httpclient.ssl.close-notify-flush-timeout"
      }
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.close-notify-read-timeout-millis",
      "type": "java.lang.Long",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "deprecated": true,
      "deprecation": {
        "replacement": "spring.cloud.gateway.httpclient.ssl.close-notify-read-timeout"
      }
    },
    {
      "name": "spring.cloud.gateway.httpclient.ssl.handshake-timeout-millis",
      "type": "java.lang.Long",
      "sourceType": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
      "deprecated": true,
      "deprecation": {
        "replacement": "spring.cloud.gateway.httpclient.ssl.handshake-timeout"
      }
    }
  ],
  "hints": []
}